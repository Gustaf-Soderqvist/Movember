{"version":3,"sources":["app.module.js","Posts/directives/angular-flexslider.directive.js","Posts/directives/fileDropZone.directive.js","Posts/Services/posts.service.js","Posts/Services/user.service.js","Posts/Filter/date.filter.js","Posts/Services/routes.js"],"names":["angular","module","directive","$parse","$timeout","restrict","scope","replace","transclude","template","compile","element","attr","linker","$scope","$element","addSlide","collectionString","flexsliderDiv","getTrackFromItem","indexString","match","removeSlide","slidesItems","trackBy","slide","flexSlide","isDefined","collectionItem","index","locals","callback","childScope","track","$new","clone","slideItem","$destroy","$watchCollection","collection","oldCollection","attrKey","attrVal","c","currentSlidesLength","e","i","idx","n","options","slider","slides","t","toAdd","toRemove","trackCollection","_i","_j","_k","_l","_len","_len1","_len2","_len3","length","data","Object","keys","_results","push","value","indexOf","item","$evalAsync","remove","append","isNaN","parseInt","f","$apply","$slider","sliderId","id","flexslider","call","this","fileDropzone","link","file","fileName","attrs","checkSize","isTypeValid","processDragOverOrEnter","validMimeTypes","event","preventDefault","dataTransfer","effectAllowed","size","_ref","maxFileSize","alert","type","bind","name","reader","FileReader","onload","evt","target","result","isString","files","readAsDataURL","factory","posts","$inject","$http","$log","info","service","save","load","get","list","post","then","res","status","headers","config","delete","$cookies","Login","username","response","Logout","UserInfo","user","filter","$filter","input","format","timezone","Date","parse","$stateProvider","$urlRouterProvider","otherwise","state","url","views","main","templateUrl","controller","resolve","postlist","title"],"mappings":"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","file":"applib.js","sourcesContent":["(function () {\r\n    'use strict';\r\n\r\n    angular.module('movember', [\r\n        'ui.router',\r\n        'ngAnimate',\r\n        'ngCookies'\r\n    ]);\r\n})();","// Generated by CoffeeScript 1.8.0\n(function () {\r\n    'use strict';\n    angular\n        .module('movember')\n        .directive('flexSlider', [\n      '$parse', '$timeout', function ($parse, $timeout) {\r\n          return {\r\n              restrict: 'AE',\n              scope: false,\n              replace: true,\n              transclude: true,\n              template: '<div class=\"flexslider-container\"></div>',\n              compile: function (element, attr, linker) {\r\n                  return function ($scope, $element) {\r\n                      var addSlide, collectionString, flexsliderDiv, getTrackFromItem, indexString, match, removeSlide, slidesItems, trackBy;\n                      match = (attr.slide || attr.flexSlide).match(/^\\s*(.+)\\s+in\\s+(.*?)(?:\\s+track\\s+by\\s+(.+?))?\\s*$/);\n                      indexString = match[1];\n                      collectionString = match[2];\n                      trackBy = angular.isDefined(match[3]) ? $parse(match[3]) : $parse(\"\" + indexString);\n                      flexsliderDiv = null;\n                      slidesItems = {};\n                      getTrackFromItem = function (collectionItem, index) {\r\n                          var locals;\n                          locals = {};\n                          locals[indexString] = collectionItem;\n                          locals['$index'] = index;\n                          return trackBy($scope, locals);\r\n                      };\n                      addSlide = function (collectionItem, index, callback) {\r\n                          var childScope, track;\n                          track = getTrackFromItem(collectionItem, index);\n                          if (slidesItems[track] != null) {\r\n                              throw \"Duplicates in a repeater are not allowed. Use 'track by' expression to specify unique keys.\";\r\n                          }\n                          childScope = $scope.$new();\n                          childScope[indexString] = collectionItem;\n                          childScope['$index'] = index;\n                          return linker(childScope, function (clone) {\r\n                              var slideItem;\n                              slideItem = {\r\n                                  collectionItem: collectionItem,\n                                  childScope: childScope,\n                                  element: clone\r\n                              };\n                              slidesItems[track] = slideItem;\n                              return typeof callback === \"function\" ? callback(slideItem) : void 0;\r\n                          });\r\n                      };\n                      removeSlide = function (collectionItem, index) {\r\n                          var slideItem, track;\n                          track = getTrackFromItem(collectionItem, index);\n                          slideItem = slidesItems[track];\n                          if (slideItem == null) {\r\n                              return;\r\n                          }\n                          delete slidesItems[track];\n                          slideItem.childScope.$destroy();\n                          return slideItem;\r\n                      };\n                      return $scope.$watchCollection(collectionString, function (collection, oldCollection) {\r\n                          var attrKey, attrVal, c, currentSlidesLength, e, i, idx, n, options, slider, slides, t, toAdd, toRemove, trackCollection, _i, _j, _k, _l, _len, _len1, _len2, _len3;\n                          if (!(collection != null ? collection.length : void 0) && !(oldCollection != null ? oldCollection.length : void 0)) {\r\n                              return;\r\n                          }\n                          if (flexsliderDiv != null) {\r\n                              slider = flexsliderDiv.data('flexslider');\n                              currentSlidesLength = Object.keys(slidesItems).length;\n                              if (collection == null) {\r\n                                  collection = [];\r\n                              }\n                              trackCollection = {};\n                              for (i = _i = 0, _len = collection.length; _i < _len; i = ++_i) {\r\n                                  c = collection[i];\n                                  trackCollection[getTrackFromItem(c, i)] = c;\r\n                              }\n                              toAdd = (function () {\r\n                                  var _j, _len1, _results;\n                                  _results = [];\n                                  for (i = _j = 0, _len1 = collection.length; _j < _len1; i = ++_j) {\r\n                                      c = collection[i];\n                                      if (slidesItems[getTrackFromItem(c, i)] == null) {\r\n                                          _results.push({\r\n                                              value: c,\n                                              index: i\r\n                                          });\r\n                                      }\r\n                                  }\n                                  return _results;\r\n                              })();\n                              toRemove = (function () {\r\n                                  var _results;\n                                  _results = [];\n                                  for (t in slidesItems) {\r\n                                      i = slidesItems[t];\n                                      if (trackCollection[t] == null) {\r\n                                          _results.push(i.collectionItem);\r\n                                      }\r\n                                  }\n                                  return _results;\r\n                              })();\n                              if ((toAdd.length === 1 && toRemove.length === 0) || toAdd.length === 0) {\r\n                                  for (_j = 0, _len1 = toRemove.length; _j < _len1; _j++) {\r\n                                      e = toRemove[_j];\n                                      e = removeSlide(e, collection.indexOf(e));\n                                      slider.removeSlide(e.element);\r\n                                  }\n                                  for (_k = 0, _len2 = toAdd.length; _k < _len2; _k++) {\r\n                                      e = toAdd[_k];\n                                      idx = e.index;\n                                      addSlide(e.value, idx, function (item) {\r\n                                          if (idx === currentSlidesLength) {\r\n                                              idx = void 0;\r\n                                          }\n                                          return $scope.$evalAsync(function () {\r\n                                              return slider.addSlide(item.element, idx);\r\n                                          });\r\n                                      });\r\n                                  }\n                                  return;\r\n                              }\r\n                          }\n                          slidesItems = {};\n                          if (flexsliderDiv != null) {\r\n                              flexsliderDiv.remove();\r\n                          }\n                          slides = angular.element('<ul class=\"slides\"></ul>');\n                          flexsliderDiv = angular.element('<div class=\"flexslider\"></div>');\n                          flexsliderDiv.append(slides);\n                          $element.append(flexsliderDiv);\n                          for (i = _l = 0, _len3 = collection.length; _l < _len3; i = ++_l) {\r\n                              c = collection[i];\n                              addSlide(c, i, function (item) {\r\n                                  return slides.append(item.element);\r\n                              });\r\n                          }\n                          options = {};\n                          for (attrKey in attr) {\r\n                              attrVal = attr[attrKey];\n                              if (attrKey.indexOf('$') === 0) {\r\n                                  continue;\r\n                              }\n                              if (!isNaN(n = parseInt(attrVal))) {\r\n                                  options[attrKey] = n;\n                                  continue;\r\n                              }\n                              if (attrVal === 'false' || attrVal === 'true') {\r\n                                  options[attrKey] = attrVal === 'true';\n                                  continue;\r\n                              }\n                              if (attrKey === 'start' || attrKey === 'before' || attrKey === 'after' || attrKey === 'end' || attrKey === 'added' || attrKey === 'removed') {\r\n                                  options[attrKey] = (function (attrVal) {\r\n                                      var f;\n                                      f = $parse(attrVal);\n                                      return function (slider) {\r\n                                          return $scope.$apply(function () {\r\n                                              return f($scope, {\r\n                                                  '$slider': {\r\n                                                      element: slider\r\n                                                  }\r\n                                              });\r\n                                          });\r\n                                      };\r\n                                  })(attrVal);\n                                  continue;\r\n                              }\n                              if (attrKey === 'startAt') {\r\n                                  options[attrKey] = $parse(attrVal)($scope);\n                                  continue;\r\n                              }\n                              options[attrKey] = attrVal;\r\n                          }\n                          if (!options.sliderId && attr.id) {\r\n                              options.sliderId = \"\" + attr.id + \"-slider\";\r\n                          }\n                          if (options.sliderId) {\r\n                              flexsliderDiv.attr('id', options.sliderId);\r\n                          }\n                          return $timeout((function () {\r\n                              return flexsliderDiv.flexslider(options);\r\n                          }), 0);\r\n                      });\r\n                  };\r\n              }\r\n          };\r\n      }\n    ]);\r\n\n}).call(this);\n","(function () {\r\n    'use strict';\n\n    angular\n        .module('movember')\n        .directive('fileDropzone', fileDropzone);\n\n    function fileDropzone() {\r\n\n        var directive = {\r\n            link: link,\n            restrict: 'A',\n            scope: {\r\n                file: '=',\n                fileName: '='\r\n            }\r\n        };\n        return directive;\n\n        function link(scope, element, attrs) {\r\n            var checkSize, isTypeValid, processDragOverOrEnter, validMimeTypes;\n\n            processDragOverOrEnter = function (event) {\r\n                if (event != null) {\r\n                    event.preventDefault();\r\n                }\n                event.dataTransfer.effectAllowed = 'copy';\n                return false;\r\n            };\n\n            validMimeTypes = attrs.fileDropzone;\n\n            checkSize = function (size) {\r\n                var _ref;\n                if (((_ref = attrs.maxFileSize) === void 0 || _ref === '') || (size / 1024) / 1024 < attrs.maxFileSize) {\r\n                    return true;\r\n                } else {\r\n                    alert(\"File must be smaller than \" + attrs.maxFileSize + \" MB\");\n                    return false;\r\n                }\r\n            };\n            isTypeValid = function (type) {\r\n                if ((validMimeTypes === void 0 || validMimeTypes === '') || validMimeTypes.indexOf(type) > -1) {\r\n                    return true;\r\n                } else {\r\n                    alert(\"Invalid file type.  File must be one of following types \" + validMimeTypes);\n                    return false;\r\n                }\r\n            };\n            element.bind('dragover', processDragOverOrEnter);\n            element.bind('dragenter', processDragOverOrEnter);\n            return element.bind('drop', function (event) {\r\n                var file, name, reader, size, type;\n                if (event != null) {\r\n                    event.preventDefault();\r\n                }\n                reader = new FileReader();\n                reader.onload = function (evt) {\r\n                    if (checkSize(size) && isTypeValid(type)) {\r\n                        return scope.$apply(function () {\r\n                            scope.file = evt.target.result;\n                            if (angular.isString(scope.fileName)) {\r\n                                return scope.fileName = name;\r\n                            }\r\n                        });\r\n                    }\r\n                };\n                file = event.dataTransfer.files[0];\n                name = file.name;\n                type = file.type;\n                size = file.size;\n                reader.readAsDataURL(file);\n                return false;\r\n            });\r\n        }\r\n    };\r\n\n})();","(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('movember')\r\n        .factory('posts', posts);\r\n\r\n    posts.$inject = ['$http', '$log'];\r\n\r\n    function posts($http, $log) {\r\n        $log.info(\"Post called\");\r\n \r\n        var service = {\r\n            save: save,\r\n            load: get,\r\n            list: list,\r\n            remove: remove\r\n        };\r\n\r\n        function save(post) {\r\n            return $http.post('/api/post', post).then(function (res,status,headers,config)\r\n            {\r\n                return res.data;\r\n            });\r\n        }\r\n\r\n        function remove(id) {\r\n            return $http.delete('/api/post/' + id).then(function(res, status, headers, config) {\r\n                return res.data;\r\n            });\r\n        }\r\n\r\n        function get(id) {\r\n                return $http.get('/api/post/' + id).then(function(res, status, headers, config) {\r\n                    return res.data;\r\n                });\r\n            }\r\n\r\n        function list() {\r\n                    return $http.get('/api/post').then(function(res, status, headers, config) {\r\n                        return res.data;\r\n                    });\r\n            }\r\n\r\n        return service;\r\n    };\r\n})();","(function () {\r\n\r\n'use strict';\r\n\r\nangular.module('movember')\r\n\r\n.factory('AuthenticationService',\r\n    ['$http', '$cookies',\r\n    function ($http, $cookies) {\r\n\r\n    \tvar service = {};\r\n\r\n    \tservice.Login = function (username) {\r\n    \t    return $http.get('/api/UserStore/' + username).then(function (response) {\r\n\r\n    \t        return response.data;\r\n\r\n    \t    });\r\n\r\n\t\t\t\t\t\r\n    \t};\r\n\r\n    \tservice.Logout = function () {\r\n    \t    return $http.post('/api/UserStore/signout').then(function (response) {\r\n\r\n    \t        return response.data;\r\n\r\n    \t    });\r\n    \t};\r\n\r\n    \tservice.UserInfo = function () {\r\n    \t\tvar user = $cookies.get(\"user\");\r\n\r\n    \t\tif (user) {\r\n    \t\t\treturn user;\r\n    \t\t}\r\n\r\n    \t\treturn null;\r\n    \t};\r\n\r\n    \treturn service;\r\n    }]);\r\n})();","(function () {\r\n    'use strict';\r\n\r\nangular.module('movember')\r\n  .filter('dateFilter', function($filter) {\r\n      return function(input,format,timezone) {\r\n          return (!!input) ? $filter('date')( Date.parse(input), format, timezone) : '';\r\n \r\n    };\r\n});\r\n})();\r\n\r\n//| dateParse:'dd/MM/yyyy - hh:mm a'","(function () {\r\n    'use strict';\r\n\r\n    angular.module('movember')\r\n       \r\n        .config(function ($stateProvider, $urlRouterProvider)\r\n\r\n        {\r\n        // for any unmatched url, redirect to state/1\r\n        $urlRouterProvider.otherwise(\"/\");\r\n\r\n        // Now set up the states\n        $stateProvider\n            .state('list', {\r\n                url: \"/\",\n\n\n          /* List > Posts */\n                views: {\r\n                    'main':\n                    {\r\n                        templateUrl: \"partials/list.html\",\n                        controller: \"ListPostController as vm\",\n                        resolve: {\r\n                            postlist: function (posts) {\r\n                                return posts.list();\r\n                            }\r\n                        }\r\n                    },\n                    'title': {\r\n                        template: 'Posts'\r\n                    }\r\n                }\r\n            })\n         /* Login >  */\n              .state('login', {\r\n                  url: \"/login\",\n\n                  views: {\r\n                      'main':\n                      {\r\n                          templateUrl: \"partials/login.html\",\n                          controller: \"LoginController as vm\",\r\n                      },\n                      'title': {\r\n                          template: 'Login'\r\n                      }\r\n                  }\r\n              })\n        \n           /* New > Post */\n            .state('new', {\r\n                url: \"/new\",\n                views: {\r\n                    'main':\n                    {\r\n                        templateUrl: \"partials/new.html\",\n                        controller: \"NewPostController as vm\"\r\n                    },\n                    'title': {\r\n                        template: 'New post'\r\n                    }\r\n                }\r\n            })\n            /* Edit > Post */\n            .state('edit', {\r\n                url: \"/edit/:id\",\n                views: {\r\n                    'main':\n                    {\r\n                        templateUrl: \"partials/edit.html\",\n                        controller: \"EditPostController as vm\"\r\n                    },\n                    'title': {\r\n                        template: 'Edit post'\r\n                    }\r\n                }\r\n            });\r\n    });\r\n   \r\n\r\n})();"]}