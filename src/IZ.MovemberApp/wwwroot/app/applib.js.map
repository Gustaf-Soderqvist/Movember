{"version":3,"sources":["app.module.js","Posts/directives/fileDropZone.directive.js","Posts/Services/posts.service.js","Posts/Services/user.service.js","Posts/Filter/date.filter.js","Posts/Services/routes.js"],"names":["angular","module","directive","fileDropzone","link","restrict","scope","file","fileName","element","attrs","checkSize","isTypeValid","processDragOverOrEnter","validMimeTypes","event","preventDefault","dataTransfer","effectAllowed","size","_ref","maxFileSize","alert","type","indexOf","bind","name","reader","FileReader","onload","evt","$apply","target","result","isString","files","readAsDataURL","factory","posts","$inject","$http","$log","info","service","save","load","get","list","remove","post","then","res","status","headers","config","data","id","delete","Base64","$cookieStore","$rootScope","$timeout","Login","username","callback","Email","success","response","SetCredentials","authdata","encode","globals","currentUser","defaults","common","put","ClearCredentials","movember","keyStr","input","output","chr1","chr2","chr3","enc1","enc2","enc3","enc4","i","charCodeAt","isNaN","charAt","length","decode","base64test","exec","window","replace","String","fromCharCode","filter","$filter","format","timezone","Date","parse","run","$stateProvider","$urlRouterProvider","otherwise","state","url","views","main","templateUrl","controller","resolve","postlist","title","template","$location","$on","next","current","path"],"mappings":"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","file":"applib.js","sourcesContent":["(function () {\r\n    'use strict';\r\n\r\n    angular.module('movember', [\r\n        'ui.router',\r\n        'ngAnimate',\r\n        'ngCookies'\r\n    ]);\r\n})();","(function () {\r\n    'use strict';\n\n    angular\n        .module('movember')\n        .directive('fileDropzone', fileDropzone);\n\n    function fileDropzone() {\r\n\n        var directive = {\r\n            link: link,\n            restrict: 'A',\n            scope: {\r\n                file: '=',\n                fileName: '='\r\n            }\r\n        };\n        return directive;\n\n        function link(scope, element, attrs) {\r\n            var checkSize, isTypeValid, processDragOverOrEnter, validMimeTypes;\n\n            processDragOverOrEnter = function (event) {\r\n                if (event != null) {\r\n                    event.preventDefault();\r\n                }\n                event.dataTransfer.effectAllowed = 'copy';\n                return false;\r\n            };\n\n            validMimeTypes = attrs.fileDropzone;\n\n            checkSize = function (size) {\r\n                var _ref;\n                if (((_ref = attrs.maxFileSize) === void 0 || _ref === '') || (size / 1024) / 1024 < attrs.maxFileSize) {\r\n                    return true;\r\n                } else {\r\n                    alert(\"File must be smaller than \" + attrs.maxFileSize + \" MB\");\n                    return false;\r\n                }\r\n            };\n            isTypeValid = function (type) {\r\n                if ((validMimeTypes === void 0 || validMimeTypes === '') || validMimeTypes.indexOf(type) > -1) {\r\n                    return true;\r\n                } else {\r\n                    alert(\"Invalid file type.  File must be one of following types \" + validMimeTypes);\n                    return false;\r\n                }\r\n            };\n            element.bind('dragover', processDragOverOrEnter);\n            element.bind('dragenter', processDragOverOrEnter);\n            return element.bind('drop', function (event) {\r\n                var file, name, reader, size, type;\n                if (event != null) {\r\n                    event.preventDefault();\r\n                }\n                reader = new FileReader();\n                reader.onload = function (evt) {\r\n                    if (checkSize(size) && isTypeValid(type)) {\r\n                        return scope.$apply(function () {\r\n                            scope.file = evt.target.result;\n                            if (angular.isString(scope.fileName)) {\r\n                                return scope.fileName = name;\r\n                            }\r\n                        });\r\n                    }\r\n                };\n                file = event.dataTransfer.files[0];\n                name = file.name;\n                type = file.type;\n                size = file.size;\n                reader.readAsDataURL(file);\n                return false;\r\n            });\r\n        }\r\n    };\r\n\n})();","(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('movember')\r\n        .factory('posts', posts);\r\n\r\n    posts.$inject = ['$http', '$log'];\r\n\r\n    function posts($http, $log) {\r\n        $log.info(\"Post called\");\r\n \r\n        var service = {\r\n            save: save,\r\n            load: get,\r\n            list: list,\r\n            remove: remove\r\n        };\r\n\r\n        function save(post) {\r\n            return $http.post('/api/post', post).then(function (res,status,headers,config)\r\n            {\r\n                return res.data;\r\n            });\r\n        }\r\n\r\n        function remove(id) {\r\n            return $http.delete('/api/post/' + id).then(function(res, status, headers, config) {\r\n                return res.data;\r\n            });\r\n        }\r\n\r\n        function get(id) {\r\n                return $http.get('/api/post/' + id).then(function(res, status, headers, config) {\r\n                    return res.data;\r\n                });\r\n            }\r\n\r\n        function list() {\r\n                    return $http.get('/api/post').then(function(res, status, headers, config) {\r\n                        return res.data;\r\n                    });\r\n            }\r\n\r\n        return service;\r\n    };\r\n})();","'use strict';\n\nangular.module('movember')\n\n.factory('AuthenticationService',\n    ['Base64', '$http', '$cookieStore', '$rootScope', '$timeout',\n    function (Base64, $http, $cookieStore, $rootScope, $timeout) {\r\n    \tvar service = {};\n\n    \tservice.Login = function (username, callback, Email) {\n\n\n    \t\t$http.post('/api/UserData/' + Email, { username: username })\n    \t\t    .success(function (response) {\n    \t\t        callback(response);\n    \t\t    });\n\n    \t};\n\n    \tservice.SetCredentials = function (username) {\r\n    \t\tvar authdata = Base64.encode(username);\n\n    \t\t$rootScope.globals = {\r\n    \t\t\tcurrentUser: {\r\n    \t\t\t\tusername: username,\n    \t\t\t\tauthdata: authdata\r\n    \t\t\t}\r\n    \t\t};\n\n    \t\t$http.defaults.headers.common['movember'] = 'Basic ' + authdata; // jshint ignore:line\n    \t\t$cookieStore.put('globals', $rootScope.globals);\r\n    \t};\n\n    \tservice.ClearCredentials = function () {\r\n    \t\t$rootScope.globals = {};\n    \t\t$cookieStore.remove('globals');\n    \t\t$http.defaults.headers.common.movember = 'Basic ';\r\n    \t};\n\n    \treturn service;\r\n    }])\n\n.factory('Base64', function () {\n\t/* jshint ignore:start */\n\n\tvar keyStr = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n\n\treturn {\r\n\t\tencode: function (input) {\r\n\t\t\tvar output = \"\";\n\t\t\tvar chr1, chr2, chr3 = \"\";\n\t\t\tvar enc1, enc2, enc3, enc4 = \"\";\n\t\t\tvar i = 0;\n\n\t\t\tdo {\r\n\t\t\t\tchr1 = input.charCodeAt(i++);\n\t\t\t\tchr2 = input.charCodeAt(i++);\n\t\t\t\tchr3 = input.charCodeAt(i++);\n\n\t\t\t\tenc1 = chr1 >> 2;\n\t\t\t\tenc2 = ((chr1 & 3) << 4) | (chr2 >> 4);\n\t\t\t\tenc3 = ((chr2 & 15) << 2) | (chr3 >> 6);\n\t\t\t\tenc4 = chr3 & 63;\n\n\t\t\t\tif (isNaN(chr2)) {\r\n\t\t\t\t\tenc3 = enc4 = 64;\r\n\t\t\t\t} else if (isNaN(chr3)) {\r\n\t\t\t\t\tenc4 = 64;\r\n\t\t\t\t}\n\n\t\t\t\toutput = output +\n                    keyStr.charAt(enc1) +\n                    keyStr.charAt(enc2) +\n                    keyStr.charAt(enc3) +\n                    keyStr.charAt(enc4);\n\t\t\t\tchr1 = chr2 = chr3 = \"\";\n\t\t\t\tenc1 = enc2 = enc3 = enc4 = \"\";\r\n\t\t\t} while (i < input.length);\n\n\t\t\treturn output;\r\n\t\t},\n\n\t\tdecode: function (input) {\r\n\t\t\tvar output = \"\";\n\t\t\tvar chr1, chr2, chr3 = \"\";\n\t\t\tvar enc1, enc2, enc3, enc4 = \"\";\n\t\t\tvar i = 0;\n\n\t\t\t// remove all characters that are not A-Z, a-z, 0-9, +, /, or =\n\t\t\tvar base64test = /[^A-Za-z0-9\\+\\/\\=]/g;\n\t\t\tif (base64test.exec(input)) {\r\n\t\t\t\twindow.alert(\"There were invalid base64 characters in the input text.\\n\" +\n                    \"Valid base64 characters are A-Z, a-z, 0-9, '+', '/',and '='\\n\" +\n                    \"Expect errors in decoding.\");\r\n\t\t\t}\n\t\t\tinput = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, \"\");\n\n\t\t\tdo {\r\n\t\t\t\tenc1 = keyStr.indexOf(input.charAt(i++));\n\t\t\t\tenc2 = keyStr.indexOf(input.charAt(i++));\n\t\t\t\tenc3 = keyStr.indexOf(input.charAt(i++));\n\t\t\t\tenc4 = keyStr.indexOf(input.charAt(i++));\n\n\t\t\t\tchr1 = (enc1 << 2) | (enc2 >> 4);\n\t\t\t\tchr2 = ((enc2 & 15) << 4) | (enc3 >> 2);\n\t\t\t\tchr3 = ((enc3 & 3) << 6) | enc4;\n\n\t\t\t\toutput = output + String.fromCharCode(chr1);\n\n\t\t\t\tif (enc3 != 64) {\r\n\t\t\t\t\toutput = output + String.fromCharCode(chr2);\r\n\t\t\t\t}\n\t\t\t\tif (enc4 != 64) {\r\n\t\t\t\t\toutput = output + String.fromCharCode(chr3);\r\n\t\t\t\t}\n\n\t\t\t\tchr1 = chr2 = chr3 = \"\";\n\t\t\t\tenc1 = enc2 = enc3 = enc4 = \"\";\r\n\n\t\t\t} while (i < input.length);\n\n\t\t\treturn output;\r\n\t\t}\r\n\t};\n\n\t/* jshint ignore:end */\r\n});","(function () {\r\n    'use strict';\r\n\r\nangular.module('movember')\r\n  .filter('dateFilter', function($filter) {\r\n      return function(input,format,timezone) {\r\n          return (!!input) ? $filter('date')( Date.parse(input), format, timezone) : '';\r\n \r\n    };\r\n});\r\n})();\r\n\r\n//| dateParse:'dd/MM/yyyy - hh:mm a'","(function () {\r\n    'use strict';\r\n\r\n    angular.module('movember')\r\n        .run(run)\r\n        .config(function ($stateProvider, $urlRouterProvider)\r\n\r\n        {\r\n        // for any unmatched url, redirect to state/1\r\n        $urlRouterProvider.otherwise(\"/\");\r\n\r\n        // Now set up the states\n        $stateProvider\n            .state('list', {\r\n                url: \"/\",\n\n\n          /* List > Posts */\n                views: {\r\n                    'main':\n                    {\r\n                        templateUrl: \"partials/list.html\",\n                        controller: \"ListPostController as vm\",\n                        resolve: {\r\n                            postlist: function (posts) {\r\n                                return posts.list();\r\n                            }\r\n                        }\r\n                    },\n                    'title': {\r\n                        template: 'Posts'\r\n                    }\r\n                }\r\n            })\n              .state('login', {\r\n                  url: \"/login\",\n\n\n                  /* List > Posts */\n                  views: {\r\n                      'main':\n                      {\r\n                          templateUrl: \"partials/login.html\",\n                          controller: \"LoginController as vm\",\r\n                      },\n                      'title': {\r\n                          template: 'Posts'\r\n                      }\r\n                  }\r\n              })\n           /* New > Post */\n            .state('new', {\r\n                url: \"/new\",\n                views: {\r\n                    'main':\n                    {\r\n                        templateUrl: \"partials/new.html\",\n                        controller: \"NewPostController as vm\"\r\n                    },\n                    'title': {\r\n                        template: 'New post'\r\n                    }\r\n                }\r\n            })\n            /* Edit > Post */\n            .state('edit', {\r\n                url: \"/edit/:id\",\n                views: {\r\n                    'main':\n                    {\r\n                        templateUrl: \"partials/edit.html\",\n                        controller: \"EditPostController as vm\"\r\n                    },\n                    'title': {\r\n                        template: 'Edit post'\r\n                    }\r\n                }\r\n            });\r\n    });\r\n    run.$inject = ['$rootScope', '$location', '$cookieStore', '$http'];\n    function run($rootScope, $location, $cookieStore, $http) {\n        // keep user logged in after page refresh\n        $rootScope.globals = $cookieStore.get('globals') || {};\n        if ($rootScope.globals.currentUser) {\r\n            $http.defaults.headers.common['movember'] = 'Basic ' + $rootScope.globals.currentUser.authdata; // jshint ignore:line\n        }\r\n\r\n        $rootScope.$on('$locationChangeStart', function (event, next, current) {\n            // redirect to login page if not logged in\n            if ($location.path() !== '/login' && !$rootScope.globals.currentUser) {\r\n                $location.path('/login');\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n})();"]}