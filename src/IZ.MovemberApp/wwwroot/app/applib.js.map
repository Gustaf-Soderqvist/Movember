{"version":3,"sources":["app.module.js","Posts/directives/fileDropZone.directive.js","Posts/Services/posts.service.js","Posts/Filter/date.filter.js","Posts/Services/routes.js"],"names":["angular","module","directive","fileDropzone","link","restrict","scope","file","fileName","element","attrs","checkSize","isTypeValid","processDragOverOrEnter","validMimeTypes","event","preventDefault","dataTransfer","effectAllowed","size","_ref","maxFileSize","alert","type","indexOf","bind","name","reader","FileReader","onload","evt","$apply","target","result","isString","files","readAsDataURL","factory","posts","$inject","$http","$log","info","service","save","load","get","list","remove","post","then","res","status","headers","config","data","id","delete","filter","$filter","input","format","timezone","Date","parse","$stateProvider","$urlRouterProvider","otherwise","state","url","views","main","templateUrl","controller","resolve","postlist","title","template"],"mappings":"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","file":"applib.js","sourcesContent":["(function () {\r\n    'use strict';\r\n\r\n    angular.module('movember', [\r\n        'ui.router',\r\n        'ngAnimate',\r\n        'ngCookies'\r\n    ]);\r\n})();","(function () {\r\n    'use strict';\n\n    angular\n        .module('movember')\n        .directive('fileDropzone', fileDropzone);\n\n    function fileDropzone() {\r\n\n        var directive = {\r\n            link: link,\n            restrict: 'A',\n            scope: {\r\n                file: '=',\n                fileName: '='\r\n            }\r\n        };\n        return directive;\n\n        function link(scope, element, attrs) {\r\n            var checkSize, isTypeValid, processDragOverOrEnter, validMimeTypes;\n\n            processDragOverOrEnter = function (event) {\r\n                if (event != null) {\r\n                    event.preventDefault();\r\n                }\n                event.dataTransfer.effectAllowed = 'copy';\n                return false;\r\n            };\n\n            validMimeTypes = attrs.fileDropzone;\n\n            checkSize = function (size) {\r\n                var _ref;\n                if (((_ref = attrs.maxFileSize) === void 0 || _ref === '') || (size / 1024) / 1024 < attrs.maxFileSize) {\r\n                    return true;\r\n                } else {\r\n                    alert(\"File must be smaller than \" + attrs.maxFileSize + \" MB\");\n                    return false;\r\n                }\r\n            };\n            isTypeValid = function (type) {\r\n                if ((validMimeTypes === void 0 || validMimeTypes === '') || validMimeTypes.indexOf(type) > -1) {\r\n                    return true;\r\n                } else {\r\n                    alert(\"Invalid file type.  File must be one of following types \" + validMimeTypes);\n                    return false;\r\n                }\r\n            };\n            element.bind('dragover', processDragOverOrEnter);\n            element.bind('dragenter', processDragOverOrEnter);\n            return element.bind('drop', function (event) {\r\n                var file, name, reader, size, type;\n                if (event != null) {\r\n                    event.preventDefault();\r\n                }\n                reader = new FileReader();\n                reader.onload = function (evt) {\r\n                    if (checkSize(size) && isTypeValid(type)) {\r\n                        return scope.$apply(function () {\r\n                            scope.file = evt.target.result;\n                            if (angular.isString(scope.fileName)) {\r\n                                return scope.fileName = name;\r\n                            }\r\n                        });\r\n                    }\r\n                };\n                file = event.dataTransfer.files[0];\n                name = file.name;\n                type = file.type;\n                size = file.size;\n                reader.readAsDataURL(file);\n                return false;\r\n            });\r\n        }\r\n    };\r\n\n})();","(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('movember')\r\n        .factory('posts', posts);\r\n\r\n    posts.$inject = ['$http', '$log'];\r\n\r\n    function posts($http, $log) {\r\n        $log.info(\"Post called\");\r\n \r\n        var service = {\r\n            save: save,\r\n            load: get,\r\n            list: list,\r\n            remove: remove\r\n        };\r\n\r\n        function save(post) {\r\n            return $http.post('/api/post', post).then(function (res,status,headers,config)\r\n            {\r\n                return res.data;\r\n            });\r\n        }\r\n\r\n        function remove(id) {\r\n            return $http.delete('/api/post/' + id).then(function(res, status, headers, config) {\r\n                return res.data;\r\n            });\r\n        }\r\n\r\n        function get(id) {\r\n                return $http.get('/api/post/' + id).then(function(res, status, headers, config) {\r\n                    return res.data;\r\n                });\r\n            }\r\n\r\n        function list() {\r\n                    return $http.get('/api/post').then(function(res, status, headers, config) {\r\n                        return res.data;\r\n                    });\r\n            }\r\n\r\n        return service;\r\n    };\r\n})();","(function () {\r\n    'use strict';\r\n\r\nangular.module('movember')\r\n  .filter('dateFilter', function($filter) {\r\n      return function(input,format,timezone) {\r\n          return (!!input) ? $filter('date')( Date.parse(input), format, timezone) : '';\r\n \r\n    };\r\n});\r\n})();\r\n\r\n//| dateParse:'dd/MM/yyyy - hh:mm a'","(function () {\r\n    'use strict';\r\n\r\n    angular.module('movember').config(function ($stateProvider, $urlRouterProvider) {\r\n        // for any unmatched url, redirect to state/1\r\n        $urlRouterProvider.otherwise(\"/\");\r\n\r\n        // Now set up the states\n        $stateProvider\n            .state('list', {\r\n                url: \"/\",\n\n                views: {\r\n                    'main':\n                    {\r\n                        templateUrl: \"partials/list.html\",\n                        controller: \"ListPostController as vm\",\n                        resolve: {\r\n                            postlist: function (posts) {\r\n                                return posts.list();\r\n                            }\r\n                        }\r\n                    },\n                    'title': {\r\n                        template: 'Posts'\r\n                    }\r\n                }\r\n            })\n            .state('new', {\r\n                url: \"/new\",\n                views: {\r\n                    'main':\n                    {\r\n                        templateUrl: \"partials/new.html\",\n                        controller: \"NewPostController as vm\"\r\n                    },\n                    'title': {\r\n                        template: 'New post'\r\n                    }\r\n                }\r\n            })\n            .state('edit', {\r\n                url: \"/edit/:id\",\n                views: {\r\n                    'main':\n                    {\r\n                        templateUrl: \"partials/edit.html\",\n                        controller: \"EditPostController as vm\"\r\n                    },\n                    'title': {\r\n                        template: 'Edit post'\r\n                    }\r\n                }\r\n            });\r\n    });\r\n})();"]}