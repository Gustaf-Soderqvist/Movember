{"version":3,"sources":["app.module.js","Posts/Services/posts.service.js","Posts/Services/routes.js"],"names":["angular","module","factory","posts","$inject","$http","$log","info","service","save","load","get","list","remove","post","then","res","status","headers","config","data","id","delete","$stateProvider","$urlRouterProvider","otherwise","state","url","views","main","templateUrl","controller","resolve","postlist","title","template"],"mappings":"CAAA,WACI,YAEAA,SAAQC,OAAO,YACX,YACA,mBCLR,WACI,YAEAD,SACKC,OAAO,YACPC,QAAQ,QAASC,MAEtBA,OAAMC,SAAW,QAAS,OAE1B,SAASD,OAAME,MAAOC,MAClBA,KAAKC,KAAK,cAEV,IAAIC,UACAC,KAAMA,KACNC,KAAMC,IACNC,KAAMA,KACNC,OAAQA,OAGZ,SAASJ,MAAKK,MACV,MAAOT,OAAMS,KAAK,YAAaA,MAAMC,KAAK,SAAUC,IAAIC,OAAOC,QAAQC,QAEnE,MAAOH,KAAII,OAInB,QAASP,QAAOQ,IACZ,MAAOhB,OAAMiB,OAAO,aAAeD,IAAIN,KAAK,SAASC,IAAKC,OAAQC,QAASC,QACvE,MAAOH,KAAII,OAInB,QAAST,KAAIU,IACL,MAAOhB,OAAMM,IAAI,YAAcU,IAAIN,KAAK,SAASC,IAAKC,OAAQC,QAASC,QACnE,MAAOH,KAAII,OAIvB,QAASR,QACG,MAAOP,OAAMM,IAAI,aAAaI,KAAK,SAASC,IAAKC,OAAQC,QAASC,QAC9D,MAAOH,KAAII,OAI3B,MAAOZ,eC5Cf,WACI,YAEAR,SAAQC,OAAO,YAAYkB,OAAO,SAAUI,eAAgBC,oBAExDA,mBAAmBC,UAAU,IAG7BF,gBACKG,MAAM,QACHC,IAAK,IAELC,OACIC,MAEIC,YAAa,qBACbC,WAAY,2BACZC,SACIC,SAAU,SAAU9B,OAChB,MAAOA,OAAMS,UAIzBsB,OACIC,SAAU,YAIrBT,MAAM,OACHC,IAAK,OACLC,OACIC,MAEIC,YAAa,oBACbC,WAAY,2BAEhBG,OACIC,SAAU,eAIrBT,MAAM,QACHC,IAAK,YACLC,OACIC,MAEIC,YAAa,qBACbC,WAAY,4BAEhBG,OACIC,SAAU","file":"applib.js","sourcesContent":["(function () {\r\n    'use strict';\r\n\r\n    angular.module('movember', [\r\n        'ui.router',\r\n        'ngAnimate'\r\n    ]);\r\n})();","(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('movember')\r\n        .factory('posts', posts);\r\n\r\n    posts.$inject = ['$http', '$log'];\r\n\r\n    function posts($http, $log) {\r\n        $log.info(\"Post called\");\r\n \r\n        var service = {\r\n            save: save,\r\n            load: get,\r\n            list: list,\r\n            remove: remove\r\n        };\r\n\r\n        function save(post) {\r\n            return $http.post('/api/post', post).then(function (res,status,headers,config)\r\n            {\r\n                return res.data;\r\n            });\r\n        }\r\n\r\n        function remove(id) {\r\n            return $http.delete('/api/post/' + id).then(function(res, status, headers, config) {\r\n                return res.data;\r\n            });\r\n        }\r\n\r\n        function get(id) {\r\n                return $http.get('/api/post' + id).then(function(res, status, headers, config) {\r\n                    return res.data;\r\n                });\r\n            }\r\n\r\n        function list() {\r\n                    return $http.get('/api/post').then(function(res, status, headers, config) {\r\n                        return res.data;\r\n                    });\r\n            }\r\n\r\n        return service;\r\n    };\r\n})();","(function () {\r\n    'use strict';\r\n\r\n    angular.module('movember').config(function ($stateProvider, $urlRouterProvider) {\r\n        // for any unmatched url, redirect to state/1\r\n        $urlRouterProvider.otherwise(\"/\");\r\n\r\n        // Now set up the states\n        $stateProvider\n            .state('list', {\r\n                url: \"/\",\n\n                views: {\r\n                    'main':\n                    {\r\n                        templateUrl: \"partials/list.html\",\n                        controller: \"ListPostController as vm\",\n                        resolve: {\r\n                            postlist: function (posts) {\r\n                                return posts.list();\r\n                            }\r\n                        }\r\n                    },\n                    'title': {\r\n                        template: 'Posts'\r\n                    }\r\n                }\r\n            })\n            .state('new', {\r\n                url: \"/new\",\n                views: {\r\n                    'main':\n                    {\r\n                        templateUrl: \"partials/new.html\",\n                        controller: \"NewPostController as vm\"\r\n                    },\n                    'title': {\r\n                        template: 'New post'\r\n                    }\r\n                }\r\n            })\n            .state('edit', {\r\n                url: \"/edit/:id\",\n                views: {\r\n                    'main':\n                    {\r\n                        templateUrl: \"partials/edit.html\",\n                        controller: \"EditPostController as vm\"\r\n                    },\n                    'title': {\r\n                        template: 'Edit post'\r\n                    }\r\n                }\r\n            });\r\n    });\r\n})();"]}